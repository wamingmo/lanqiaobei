/*
题目描述
给出正整数 n，要求按如下方式构造数列：

只有一个数 n 的数列是一个合法的数列。
在一个合法的数列的末尾加入一个正整数，但是这个正整数不能超过该数列最后一项的一半，可以得到一个新的合法数列。
请你求出，一共有多少个合法的数列。两个合法数列 a,b 不同当且仅当两数列长度不同或存在一个正整数 i≤∣a∣，使得 ai!=bi

输入格式
输入只有一行一个整数，表示 n。

输出格式
输出一行一个整数，表示合法的数列个数。
*/
#include <iostream>
using namespace std;

int main()
{
    int a[1001][2] = {0};
    int n;
    cin >> n;
    a[1][0] = 1;
    a[1][1] = 1;
    a[2][0] = 2;
    a[2][1] = 3;
    for (int i = 3; i <= n; i++)
    {
        a[i][0] = a[i / 2][1] + 1;
        a[i][1] = a[i - 1][1] + a[i][0];
    }
    cout << a[n][0];
    return 0;
}